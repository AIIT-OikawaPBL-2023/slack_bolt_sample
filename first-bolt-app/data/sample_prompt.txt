以下のドキュメント内容をうまくまとめてプレゼンテーションスライドを作ってね。
とは言っても、君は直接スライドを操作できるわけではないから、代わりに君が作成したスライドを`python-pptx`を使ってファイル化するPythonコード全体を提示してね。
slide.placeholdersのindexを間違えないようにしてね。
なお、スライドの出力先Pathは`/workspace/slack_bolt_sample/first-bolt-app/static`としてね。
返事はPythonコードのみとしてね。
Pythonコード以外の返事は不要だよ。
また、`python-pptx`はインストール済みの環境で実行するから`pip install`について示すのは不要だよ。
Pythonコードは必ずひとまとめに提示して、コードブロックを分割はしないでね。
ぼくは君が作成してくれたPythonコードをそのままコピーペーストして実行するつもりなんだ。


```
# 追川 PT 1Q プロジェクト計画書

作成日：2022年04月16日

# Ⅰ. 全体計画

## メンバー

ウサギ、ネコ、イヌ、パンダ、チンチラ、ハムスター

## **テーマ**

### スクラムを通じた大規模言語モデルの活用方法とアジャイル開発の思想の学習および習得

## **目的**

### **このプロジェクトは「学習」を主目的として進行する。**

- スクラムを用いたプロダクト開発の実践を通じて以下を学習・習得する
    1. アジャイル開発の思想
    2. 大規模言語モデルの技術動向の把握および活用方法
    3. ソフトウェアの開発技法

## **目標**

### 上記目的を達成する手段として「複数サービスにまたがるドキュメント検索とサジェストに特化したbot」を作成する。

各目的に対して以下を目標とする。

1. **アジャイル開発の思想の学習・習得**
- スクラムを用いてスプリントを回し、開発プロセスを改善し続ける
- スプリントごとに機能を改善した動くプロダクトを継続的にリリースする
1. **大規模言語モデルの技術動向の把握および活用方法の学習・習得**
- プロダクト開発に活用する
    - GitHub Copilotを導入して人の手による記述量を減らす
    - Chat GPTを設計・コードレビューのレビュアーとして活用する
- プロダクトに組み込む
    - 大規模言語モデルをプロダクトへ導入した経験を獲得する
1. **ソフトウェアの開発技法の学習・習得**
- スキルセットが異なる開発チームにおける効果的なコラボレイティブ開発手法を習得する
- ソフトウェア工学に基づいた設計・実装技術を習得する

### 本 PBL は学習を主たる目的とするため、下記はスコープ外とする。

- プロダクトの新規性・競合優位性の追求
- プロダクトの事業性・収益性の追求

## プロジェクト体制

- 全員がスクラムで定義された全ての役割をローテーションさせて2回以上経験する

## コミュニケーション計画

- コアミーティング　週1回　3時間/回　オンライン（Google meet）
- サブミーティング　週2回　3時間/回　オンライン（Google meet）
- 学生間、先生方との連絡はSlackで行う
- メンバー同士での1on1/Q
- 先生との1on1/Q

## 課題管理

- チーム運営の課題管理に関しては、Notionのリストを用いる
- プロダクト開発の課題管理に関しては、GitHubを用いる

## 予算管理

- Googleスプレッドシートを使用して予実の管理を行う

## リスク管理

- 外部レビューの実施: 成果物に対する外部からの視点を取り入れる

## マスタースケジュール

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0a957694-f1fc-43af-8056-15a832f64bf9/Untitled.png)

# Ⅱ. １Qの実施計画

## 日程

- コアミーティング　毎週土曜日　9:00-12:00 を原則とする
- サブミーティング　毎週月、水曜日　18:30-21:30 を原則とする

## 目標

1. **アジャイル開発思想の学習・習得**
    - スクラム本の輪読を行いチーム全体でスクラムルールを策定し、継続的に改善する
    - 全チームメンバーがスクラムの基本的な概念と手法を理解し、実践できるようになる
    - 1on1を実施し、チームの質を向上させる
    - チームの質を評価する指標を検討し、改善点を特定する
2. **大規模言語モデルの活用方法の習得**
    - 調査を行い、最適なAPIを選定する
    - GitHub Copilotを導入し、開発環境を構築する
3. **プロダクト開発**
    - 開発環境を構築し、利用するAPI(Slack Notion)やライブラリの検討を終える
    - プロダクトバックログを作成する
    - MVP(Minimum Viable Product)を作成する
4. **ソフトウェア開発技法の習得**
    - バージョン管理技術の学習を終える
    - チームで効果的なコラボレイティブコーディング技術の学習を終える
    - 使用する開発技法の選定を終える
        - CI/CDや駆動開発技法の候補を選出する

## 実施事項

### 1. アジャイルの思想とスクラムの習得

- スクラムの学習
    - 「スクラム 仕事が４倍速くなる“世界標準”のチーム戦術」の輪読
    - 実践ソフトウェアエンジニアリング[第９版]
    - スクラムルールの策定と実践
    - 輪読会を元にスクラムルールを策定
    - PBL活動でのポモドーロ・テクニックの導入
- 1on1
    - メンバー間で全員と1on1を実施
- チームアプローチの評価
    - チームコミュニケーションを評価しうる指標の検討
    - 上記指標を評価するための質問票作成およびデータ収集

### 2. 大規模言語モデルの活用

- 大規模言語モデルの活用技術の調査・学習・実践
    - 大規模言語モデルに関する調査
    - Chat GPTのAPIを調査する
    - GitHub Copilotの導入

### 3. プロダクト開発

- 開発環境を構築し、利用するAPI(Slack Notion)やライブラリの検討
- プロダクトバックログを作成する
- MVP(Minimum Viable Product)のチラシを作成する

### 4. ソフトウェア開発技法の習得

- バージョン管理技術の習得
    - 複数人でのgitとGitHubの活用方法を学ぶワークショップを行う
- コラボレイティブコーディング技術の学習
- 使用する技術の選定
    - 例: Slack プラットフォーム, Notion API, ChatGPT API
- ソフトウェア開発技法の選定
    - 例: CI/CD 、駆動開発
- 各メンバーのスキルに応じたスキル習得
```
